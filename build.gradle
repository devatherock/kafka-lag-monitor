plugins {
    id("com.github.johnrengelman.shadow") version "6.1.0"
    id("io.micronaut.application") version "2.0.8"
    id 'java'
    id 'groovy'
    id 'jacoco'
    id 'org.sonarqube' version '3.5.0.2730'
    id 'com.github.kt3k.coveralls' version '2.12.0'
    id 'com.diffplug.spotless' version '6.5.2'
    id 'org.owasp.dependencycheck' version '7.4.4'
}

version = "0.3.0"
group = "io.github.devatherock"
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("io.github.devatherock.*")
    }
}

configurations {
    // Force dependency versions to use dependencies without vulnerabilities
    all {
        resolutionStrategy {
            force 'org.jsoup:jsoup:1.15.3'
            force 'com.fasterxml.jackson.core:jackson-databind:2.14.1'
        }
    }
}

dependencies {
    def lombokVersion = '1.18.24'

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    annotationProcessor("io.micronaut.openapi:micronaut-openapi")

    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    compileOnly group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.1'
    compileOnly("org.graalvm.nativeimage:svm")

    implementation("io.micronaut:micronaut-inject")
    implementation("io.micronaut:micronaut-validation")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.swagger.core.v3:swagger-annotations")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut.micrometer:micronaut-micrometer-core")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-influx")
    implementation("io.micronaut.micrometer:micronaut-micrometer-registry-prometheus")

    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '7.2'
    implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '3.3.1'
    implementation group: 'javax.inject', name: 'javax.inject', version: '1'

    runtimeOnly("ch.qos.logback:logback-classic:1.4.5")

    testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation "io.micronaut.test:micronaut-test-spock"

    testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.1-groovy-3.0'
    testImplementation group: 'cglib', name: 'cglib-nodep', version: '3.3.0'
    testImplementation group: 'org.objenesis', name: 'objenesis', version: '3.3'
}

application {
    mainClass.set("io.github.devatherock.Application")
}

run {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
    systemProperties(System.properties)
}

ext.jacoco = [
    exclusions: [
        'io/github/devatherock/Application.class'
    ]
]

apply from: 'https://raw.githubusercontent.com/devatherock/gradle-includes/master/checks.gradle'