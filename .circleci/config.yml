docker_auth: &docker_auth
  auth:
    username: $DOCKER_USERNAME
    password: $DOCKER_PASSWORD

work_directory: &work_directory
  working_directory: ~/kafka-lag-monitor

resource_class: &resource_class
  resource_class: small
  
release_filter: &release_filter
  filters:
    branches:
      only: non-existent-branch
    tags:
      only: /^v[0-9\.]+$/
      
pr_filter: &pr_filter
  filters:
    branches:
      ignore: master

orbs:
  docker: circleci/docker@2.2.0
  templates: devatherock/circleci-templates@0.4.0

parameters:
  repo_name:
    type: string
    default: "kafka-lag-monitor"
  
executors:
  jdk-executor:
    docker:
      - image: devatherock/graalvm:ol8-java17-22.1.0-5
        <<: *docker_auth
    resource_class: small
    <<: *work_directory
    environment:
      # To generate swagger UI
      JAVA_TOOL_OPTIONS: '-Xmx1536m -Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.theme=flattop'
  docker-executor:
    docker:
      - image: cimg/openjdk:17.0
        <<: *docker_auth
    <<: *resource_class
    <<: *work_directory

version: 2.1
jobs:
  test:
    executor: jdk-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/kafka-lag-monitor
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies
      - run: |
          ./gradlew check sonar -Dsonar.login=$SONAR_TOKEN -Dgraalvm=true
      - store_artifacts:
          path: build/reports
      - store_test_results:
          path: build/test-results

  build:
    executor: jdk-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/kafka-lag-monitor
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies
      - run: |
          ./gradlew build coveralls sonar -Dsonar.login=$SONAR_TOKEN -Dgraalvm=true
      - persist_to_workspace:
          root: ~/kafka-lag-monitor
          paths:
            - build
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - store_artifacts:
          path: build/reports
      - store_test_results:
          path: build/test-results

  publish_release:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/kafka-lag-monitor
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
          docker pull devatherock/kafka-lag-monitor:$DEV_TAG
          docker tag devatherock/kafka-lag-monitor:$DEV_TAG devatherock/kafka-lag-monitor:$TAG
          docker push devatherock/kafka-lag-monitor:$TAG

workflows:
  version: 2.1
  build_publish:
    jobs:
      - templates/yaml_validator:
          name: validate_yamls
          context:
            - docker-credentials
          work_dir: '~/<< pipeline.parameters.repo_name >>'
          filters:
            branches:
              only: master
      - build:
          context:
            - docker-credentials
            - sonar-credentials
          requires:
            - validate_yamls
      - docker/publish:
          name: publish
          executor: docker-executor
          context:
            - docker-credentials
          requires:
            - build
          image: devatherock/kafka-lag-monitor
          attach-at: ~/kafka-lag-monitor
          tag: "${CIRCLE_SHA1:0:8},latest"
          use-remote-docker: true
          docker-username: DOCKER_USERNAME
      - templates/dockerhub_readme_update:
          name: dockerhub_readme
          context:
            - docker-credentials
            - dockerhub-readme-credentials
          docker_image: '<< pipeline.parameters.repo_name >>'
          image_description: 'Monitors kafka lag and publishes the metrics to different metrics backends'
          work_dir: '~/<< pipeline.parameters.repo_name >>'
          requires:
            - publish
      - templates/slack:
          name: notify
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - dockerhub_readme

  release:
    jobs:
      - publish_release:
          context:
            - docker-credentials
          <<: *release_filter
      - templates/slack:
          name: notify
          context:
            - docker-credentials
            - slack-webhook
          <<: *release_filter
          requires:
            - publish_release

  pr_check:
    jobs:
      - templates/changelog_updater:
          name: changelog_updater
          context:
            - docker-credentials
            - changelog-updater-credentials
          <<: *pr_filter
      - templates/yaml_validator:
          name: validate_yamls
          context:
            - docker-credentials
          work_dir: '~/<< pipeline.parameters.repo_name >>'
          requires:
            - changelog_updater
      - test:
          context:
            - docker-credentials
            - sonar-credentials
          requires:
            - validate_yamls