slack_image: &slack_image
  docker:
    - image: devatherock/simple-slack:0.7.0
      auth:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD

orbs:
  docker: circleci/docker@1.5.0

work_directory: &work_directory
  working_directory: ~/kafka-lag-monitor

resource_class: &resource_class
  resource_class: small
  
release_filter: &release_filter
  filters:
    branches:
      only: non-existent-branch
    tags:
      only: /^v[0-9\.]+$/
  
executors:
  jdk-executor:
    docker:
      - image: devatherock/graalvm:0.2.0
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory
    environment:
      # To generate swagger UI
      JAVA_TOOL_OPTIONS: '-Dmicronaut.openapi.views.spec=swagger-ui.enabled=true,swagger-ui.theme=flattop'
  docker-executor:
    docker:
      - image: cimg/openjdk:11.0
        auth:
          username: $DOCKER_USERNAME
          password: $DOCKER_PASSWORD
    <<: *resource_class
    <<: *work_directory

version: 2.1
jobs:
  test:
    executor: jdk-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/kafka-lag-monitor
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies
            - gradle-v1
      - run: |
          ./gradlew test sonarqube -Dsonar.login=$SONAR_TOKEN -Dgraalvm=true
      - store_test_results:
          path: build/test-results
  build:
    executor: jdk-executor
    steps:
      - checkout
      - attach_workspace:
          at: ~/kafka-lag-monitor
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            - v1-dependencies
            - gradle-v1
      - run: |
          ./gradlew build coveralls sonarqube -Dsonar.login=$SONAR_TOKEN -Dgraalvm=true
      - persist_to_workspace:
          root: ~/kafka-lag-monitor
          paths:
            - build
      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}
      - store_test_results:
          path: build/test-results  

  publish_release:
    executor: docker-executor
    steps:
      - checkout
      - setup_remote_docker
      - attach_workspace:
          at: ~/kafka-lag-monitor
      - run: |
          TAG=${CIRCLE_TAG#v}
          DEV_TAG=${CIRCLE_SHA1:0:8}
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker pull devatherock/kafka-lag-monitor:$DEV_TAG
          docker tag devatherock/kafka-lag-monitor:$DEV_TAG devatherock/kafka-lag-monitor:$TAG
          docker push devatherock/kafka-lag-monitor:$TAG

  notify:
    <<: *slack_image
    <<: *resource_class
    environment:
      TEXT: "Success: {{.CircleBuildUrl}} by {{.CircleUsername}}"
      CHANNEL: general
      TITLE: "Build completed"
    steps:
      - run: /bin/simpleslack -c "#33ad7f" || true

workflows:
  version: 2.1
  build_publish:
    jobs:
      - build:
          context:
            - docker-credentials
            - sonar-credentials
          filters:
            branches:
              only: master
      - docker/publish:
          name: publish
          executor: docker-executor
          context:
            - docker-credentials
          requires:
            - build
          image: devatherock/kafka-lag-monitor
          attach-at: ~/kafka-lag-monitor
          tag: "${CIRCLE_SHA1:0:8},latest"
          use-remote-docker: true
          docker-username: DOCKER_USERNAME
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          requires:
            - publish
  release:
    jobs:
      - publish_release:
          context:
            - docker-credentials
          <<: *release_filter
      - notify:
          context:
            - docker-credentials
            - slack-webhook
          <<: *release_filter
          requires:
            - publish_release
  pr_check:
    jobs:
      - test:
          context:
            - docker-credentials
            - sonar-credentials
          filters:
            branches:
              ignore: master